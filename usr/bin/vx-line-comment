#!/usr/bin/python3
# -*- coding: UTF-8 -*-

# Copyright (c) 2012-2024 Jose Antonio Chavarría <jachavar@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import errno
import fileinput
import re
import argparse

__author__ = 'Jose Antonio Chavarría'


def parse_args():
    parser = argparse.ArgumentParser(
        description='Comment/uncomment a line in a configuration file',
        epilog='Vitalinux utility'
    )

    parser.add_argument(
        '-t', '--text',
        action='store',
        help='text to comment/uncomment in file',
        required=True
    )

    parser.add_argument(
        '-f', '--file',
        action='store',
        help='file to comment/uncomment text',
        required=True
    )

    parser.add_argument(
        '-s', '--start',
        action='store',
        help='character to comment/uncomment text ("#" by default)',
        default='#',
        choices='#;'
    )

    parser.add_argument(
        '-q', '--quiet',
        action='store_true',
        help='enable silence mode (no verbose)'
    )

    group = parser.add_mutually_exclusive_group(required=False)
    group.add_argument(
        '-c', '--comment',
        action='store_true',
        help='enable comment mode (default mode)',
        default=True
    )
    group.add_argument(
        '-u', '--uncomment',
        action='store_true',
        help='enable uncomment mode'
    )

    return vars(parser.parse_args())


def run():
    args = parse_args()

    if not os.path.isfile(args['file']):
        if not args['quiet']:
            print('File "%s" not found' % args['file'])
        sys.exit(errno.ENOENT)

    # comment mode
    if args['comment']:
        start = args['text']
        replace = '%s%s' % (args['start'], args['text'])

    # uncomment mode
    if args['uncomment']:
        start = r'%s(\s)*%s' % (args['start'], args['text'])
        replace = args['text']

    # find all occurrences!!!
    changed = False
    for line in fileinput.input(args['file'], inplace=1):
        if re.match(start, line):
            print(re.sub(start, replace, line).strip())
            changed = True
        else:
            print(line.strip())

    fileinput.close()

    if changed:
        if not args['quiet']:
            print('Text replaced!!!')
        sys.exit(os.EX_OK)  # no error

    if not args['quiet']:
        print('Text not found')
    sys.exit(errno.ENODATA)


if __name__ == '__main__':
    run()
